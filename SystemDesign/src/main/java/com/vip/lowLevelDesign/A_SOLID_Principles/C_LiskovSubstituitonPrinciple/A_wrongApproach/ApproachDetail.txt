->  In this wrong approach we create a "Bird" class which have a "fly()" method now this "Penguin" class will extend the "Bird"
    class but doesn't have "fly()" method


   In this, Penguin is a subclass of Bird, but it inherits the fly method even though
   Penguins are flightless birds. This violates the Liskov Substitution Principle because you
   can't substitute a Penguin object for a Bird object without unexpected behavior (i.e., the fly method being present for a Penguin).
